// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teram.HR.Module.TicketRegister.Entities.DbContext;

#nullable disable

namespace Teram.HR.Module.TicketRegister.Migrations
{
    [DbContext(typeof(TicketRegisterDbContext))]
    partial class TicketRegisterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Teram.HR.Module.TicketRegister.Entities.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AreaId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AreaId");

                    b.ToTable("Areas", "Ticket");
                });

            modelBuilder.Entity("Teram.HR.Module.TicketRegister.Entities.AreaRow", b =>
                {
                    b.Property<int>("AreaRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AreaRowId"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("RowNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeatCount")
                        .HasColumnType("int");

                    b.HasKey("AreaRowId");

                    b.HasIndex("AreaId");

                    b.ToTable("AreaRows", "Ticket");
                });

            modelBuilder.Entity("Teram.HR.Module.TicketRegister.Entities.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<int>("AreaRowId")
                        .HasColumnType("int");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReservedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReservedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.HasKey("SeatId");

                    b.HasIndex("AreaRowId");

                    b.ToTable("Seats", "Ticket");
                });

            modelBuilder.Entity("Teram.HR.Module.TicketRegister.Entities.AreaRow", b =>
                {
                    b.HasOne("Teram.HR.Module.TicketRegister.Entities.Area", "Area")
                        .WithMany("AreaRows")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Teram.HR.Module.TicketRegister.Entities.Seat", b =>
                {
                    b.HasOne("Teram.HR.Module.TicketRegister.Entities.AreaRow", "AreaRow")
                        .WithMany("Seats")
                        .HasForeignKey("AreaRowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaRow");
                });

            modelBuilder.Entity("Teram.HR.Module.TicketRegister.Entities.Area", b =>
                {
                    b.Navigation("AreaRows");
                });

            modelBuilder.Entity("Teram.HR.Module.TicketRegister.Entities.AreaRow", b =>
                {
                    b.Navigation("Seats");
                });
#pragma warning restore 612, 618
        }
    }
}
