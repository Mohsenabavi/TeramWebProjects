// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teram.QC.Module.IncomingGoods.Entities.DbContext;

#nullable disable

namespace Teram.QC.Module.IncomingGoods.Migrations
{
    [DbContext(typeof(IncomingGoodsContext))]
    [Migration("20240102112215_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Teram.QC.Module.IncomingGoods.Entities.ControlPlan", b =>
                {
                    b.Property<int>("ControlPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ControlPlanId"));

                    b.Property<string>("AcceptanceCriteria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ControlPlanCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ControlPlanParameter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuantityDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ControlPlanId");

                    b.HasIndex("ControlPlanCategoryId");

                    b.ToTable("ControlPlans", "QC");
                });

            modelBuilder.Entity("Teram.QC.Module.IncomingGoods.Entities.ControlPlanCategory", b =>
                {
                    b.Property<int>("ControlPlanCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ControlPlanCategoryId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ControlPlanCategoryId");

                    b.ToTable("ControlPlanCategories", "QC");
                });

            modelBuilder.Entity("Teram.QC.Module.IncomingGoods.Entities.IncomingGoodsInspection", b =>
                {
                    b.Property<int>("IncomingGoodsInspectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncomingGoodsInspectionId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GoodsCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoodsTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InspectionFormStatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsConsignment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSampleGoods")
                        .HasColumnType("bit");

                    b.Property<string>("QualityInspectionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncomingGoodsInspectionId");

                    b.ToTable("IncomingGoodsInspections", "QC");
                });

            modelBuilder.Entity("Teram.QC.Module.IncomingGoods.Entities.IncomingGoodsInspectionItem", b =>
                {
                    b.Property<int>("IncomingGoodsInspectionItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncomingGoodsInspectionItemId"));

                    b.Property<int>("AmountOfDefects")
                        .HasColumnType("int");

                    b.Property<int>("ControlPlanId")
                        .HasColumnType("int");

                    b.Property<bool>("HasFunctionalTest")
                        .HasColumnType("bit");

                    b.Property<int>("IncomingGoodsInspectionId")
                        .HasColumnType("int");

                    b.Property<string>("InspectionResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionResultRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InspectionStatus")
                        .HasColumnType("int");

                    b.HasKey("IncomingGoodsInspectionItemId");

                    b.HasIndex("ControlPlanId");

                    b.HasIndex("IncomingGoodsInspectionId");

                    b.ToTable("IncomingGoodsInspectionItems", "QC");
                });

            modelBuilder.Entity("Teram.QC.Module.IncomingGoods.Entities.ControlPlan", b =>
                {
                    b.HasOne("Teram.QC.Module.IncomingGoods.Entities.ControlPlanCategory", "ControlPlanCategory")
                        .WithMany("ControlPlans")
                        .HasForeignKey("ControlPlanCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlPlanCategory");
                });

            modelBuilder.Entity("Teram.QC.Module.IncomingGoods.Entities.IncomingGoodsInspectionItem", b =>
                {
                    b.HasOne("Teram.QC.Module.IncomingGoods.Entities.ControlPlan", "ControlPlan")
                        .WithMany("IncomingGoodsInspectionItem")
                        .HasForeignKey("ControlPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teram.QC.Module.IncomingGoods.Entities.IncomingGoodsInspection", "IncomingGoodsInspection")
                        .WithMany("IncomingGoodsInspectionItems")
                        .HasForeignKey("IncomingGoodsInspectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlPlan");

                    b.Navigation("IncomingGoodsInspection");
                });

            modelBuilder.Entity("Teram.QC.Module.IncomingGoods.Entities.ControlPlan", b =>
                {
                    b.Navigation("IncomingGoodsInspectionItem");
                });

            modelBuilder.Entity("Teram.QC.Module.IncomingGoods.Entities.ControlPlanCategory", b =>
                {
                    b.Navigation("ControlPlans");
                });

            modelBuilder.Entity("Teram.QC.Module.IncomingGoods.Entities.IncomingGoodsInspection", b =>
                {
                    b.Navigation("IncomingGoodsInspectionItems");
                });
#pragma warning restore 612, 618
        }
    }
}
