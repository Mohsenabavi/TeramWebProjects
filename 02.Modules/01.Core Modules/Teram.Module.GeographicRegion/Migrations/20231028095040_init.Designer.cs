// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teram.Module.GeographicRegion.Entities.DbContext;

#nullable disable

namespace Teram.Module.GeographicRegion.Migrations
{
    [DbContext(typeof(GeographicDbContext))]
    [Migration("20231028095040_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Teram.Module.GeographicRegion.Entities.GeographicRegion", b =>
                {
                    b.Property<int>("GeographicRegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeographicRegionId"));

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<int>("GeographicType")
                        .HasColumnType("int")
                        .HasColumnName("GeographicRegionTypeId");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ParentGeographicRegionId")
                        .HasColumnType("int");

                    b.HasKey("GeographicRegionId");

                    b.HasIndex("ParentGeographicRegionId");

                    b.ToTable("GeographicRegions", "Geo");
                });

            modelBuilder.Entity("Teram.Module.GeographicRegion.Entities.GeographicRegion", b =>
                {
                    b.HasOne("Teram.Module.GeographicRegion.Entities.GeographicRegion", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentGeographicRegionId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Teram.Module.GeographicRegion.Entities.GeographicRegion", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
