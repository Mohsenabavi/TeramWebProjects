// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teram.QC.Module.FinalProduct.Entities.DbContext;

#nullable disable

namespace Teram.QC.Module.FinalProduct.Migrations
{
    [DbContext(typeof(FinalProductDbContext))]
    [Migration("20240407062534_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.AcceptancePeriod", b =>
                {
                    b.Property<int>("AcceptancePeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcceptancePeriodId"));

                    b.Property<string>("A")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("EndInterval")
                        .HasColumnType("bigint");

                    b.Property<int>("QCControlPlanId")
                        .HasColumnType("int");

                    b.Property<int>("SampleCount")
                        .HasColumnType("int");

                    b.Property<long>("StartInterval")
                        .HasColumnType("bigint");

                    b.Property<string>("Total")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("AcceptancePeriodId");

                    b.HasIndex("QCControlPlanId");

                    b.ToTable("AcceptancePeriods", "QCFP");
                });

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.ControlPlanDefect", b =>
                {
                    b.Property<int>("ControlPlanDefectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ControlPlanDefectId"));

                    b.Property<string>("ControlPlanDefectVal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("QCControlPlanId")
                        .HasColumnType("int");

                    b.Property<int>("QCDefectId")
                        .HasColumnType("int");

                    b.HasKey("ControlPlanDefectId");

                    b.HasIndex("QCControlPlanId");

                    b.HasIndex("QCDefectId");

                    b.ToTable("ControlPlanDefects", "QCFP");
                });

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.FinalProductInspection", b =>
                {
                    b.Property<int>("FinalProductInspectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinalProductInspectionId"));

                    b.Property<string>("ControlPlan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("EndInterval")
                        .HasColumnType("bigint");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("OrderTitle")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("SampleCount")
                        .HasColumnType("int");

                    b.Property<long>("StartInterval")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalCount")
                        .HasColumnType("bigint");

                    b.Property<string>("TracingCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FinalProductInspectionId");

                    b.ToTable("FinalProductInspections", "QCFP");
                });

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.FinalProductInspectionDefect", b =>
                {
                    b.Property<int>("FinalProductInspectionDefectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinalProductInspectionDefectId"));

                    b.Property<int>("ControlPlanDefectId")
                        .HasColumnType("int");

                    b.Property<int>("FinalProductInspectionId")
                        .HasColumnType("int");

                    b.Property<int>("FirstSample")
                        .HasColumnType("int");

                    b.Property<int>("ForthSample")
                        .HasColumnType("int");

                    b.Property<int>("SecondSample")
                        .HasColumnType("int");

                    b.Property<int>("ThirdSample")
                        .HasColumnType("int");

                    b.HasKey("FinalProductInspectionDefectId");

                    b.HasIndex("ControlPlanDefectId");

                    b.HasIndex("FinalProductInspectionId");

                    b.ToTable("FinalProductInspectionDefects", "QCFP");
                });

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.FinalProductNoncompliance", b =>
                {
                    b.Property<int>("FinalProductNoncomplianceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinalProductNoncomplianceId"));

                    b.Property<string>("ControlPlan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ControlPlanDefectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("FinalProductInspectionId")
                        .HasColumnType("int");

                    b.Property<string>("FinalProductNoncomplianceNumber")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("FirstSample")
                        .HasColumnType("int");

                    b.Property<int>("ForthSample")
                        .HasColumnType("int");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("OrderTitle")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecondSample")
                        .HasColumnType("int");

                    b.Property<int>("ThirdSample")
                        .HasColumnType("int");

                    b.HasKey("FinalProductNoncomplianceId");

                    b.HasIndex("ControlPlanDefectId");

                    b.ToTable("FinalProductNoncompliances", "QCFP");
                });

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.QCControlPlan", b =>
                {
                    b.Property<int>("QCControlPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QCControlPlanId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("QCControlPlanId");

                    b.ToTable("QCControlPlans", "QCFP");
                });

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.QCDefect", b =>
                {
                    b.Property<int>("QCDefectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QCDefectId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QCDefectId");

                    b.ToTable("QCDefects", "QCFP");
                });

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.AcceptancePeriod", b =>
                {
                    b.HasOne("Teram.QC.Module.FinalProduct.Entities.QCControlPlan", "QCControlPlan")
                        .WithMany("AcceptancePeriods")
                        .HasForeignKey("QCControlPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QCControlPlan");
                });

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.ControlPlanDefect", b =>
                {
                    b.HasOne("Teram.QC.Module.FinalProduct.Entities.QCControlPlan", "QCControlPlan")
                        .WithMany("ControlPlanDefects")
                        .HasForeignKey("QCControlPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teram.QC.Module.FinalProduct.Entities.QCDefect", "QCDefect")
                        .WithMany("ControlPlanDefects")
                        .HasForeignKey("QCDefectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QCControlPlan");

                    b.Navigation("QCDefect");
                });

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.FinalProductInspectionDefect", b =>
                {
                    b.HasOne("Teram.QC.Module.FinalProduct.Entities.ControlPlanDefect", "ControlPlanDefect")
                        .WithMany("FinalProductInspectionDefects")
                        .HasForeignKey("ControlPlanDefectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teram.QC.Module.FinalProduct.Entities.FinalProductInspection", "FinalProductInspection")
                        .WithMany("FinalProductInspectionDefects")
                        .HasForeignKey("FinalProductInspectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlPlanDefect");

                    b.Navigation("FinalProductInspection");
                });

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.FinalProductNoncompliance", b =>
                {
                    b.HasOne("Teram.QC.Module.FinalProduct.Entities.ControlPlanDefect", "ControlPlanDefect")
                        .WithMany("FinalProductNoncompliances")
                        .HasForeignKey("ControlPlanDefectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlPlanDefect");
                });

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.ControlPlanDefect", b =>
                {
                    b.Navigation("FinalProductInspectionDefects");

                    b.Navigation("FinalProductNoncompliances");
                });

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.FinalProductInspection", b =>
                {
                    b.Navigation("FinalProductInspectionDefects");
                });

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.QCControlPlan", b =>
                {
                    b.Navigation("AcceptancePeriods");

                    b.Navigation("ControlPlanDefects");
                });

            modelBuilder.Entity("Teram.QC.Module.FinalProduct.Entities.QCDefect", b =>
                {
                    b.Navigation("ControlPlanDefects");
                });
#pragma warning restore 612, 618
        }
    }
}
