// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teram.HR.Module.Recruitment.Entities.DbContext;

#nullable disable

namespace Teram.HR.Module.Recruitment.Migrations
{
    [DbContext(typeof(HRContext))]
    partial class HRContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.BaseInfo.Major", b =>
                {
                    b.Property<int>("MajorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MajorId"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MajorId");

                    b.ToTable("Majors", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.EmployeeJobBackground", b =>
                {
                    b.Property<int>("EmployeeJobBackgroundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeJobBackgroundId"));

                    b.Property<DateTime?>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovePerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovePersonRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApproveStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("ApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DisciplineIsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("FinalStatement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MoralityIsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("PerformanceIsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("ResumeIsMatch")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeJobBackgroundId");

                    b.HasIndex("JobApplicantId");

                    b.ToTable("EmployeeJobBackground");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.HSEApproveHistory", b =>
                {
                    b.Property<int>("HSEApproveHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HSEApproveHistoryId"));

                    b.Property<Guid>("ApprovedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FileSummaryAttchmanetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("JobApplicantId")
                        .HasColumnType("int");

                    b.Property<int>("OccupationalMedicineApproveStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("OccupationalMedicineApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OccupationalMedicineDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OccupationalMedicineRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReferralAtachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HSEApproveHistoryId");

                    b.HasIndex("JobApplicantId");

                    b.ToTable("HSEApproveHistories", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicant", b =>
                {
                    b.Property<int>("JobApplicantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobApplicantId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BaseInformationApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BaseInformationApproveStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("BaseInformationApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BaseInformationErrors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpreminetDeadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlowType")
                        .HasColumnType("int");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InvitationToWorkDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InvitedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("JobCategory")
                        .HasColumnType("int");

                    b.Property<int>("JobPositionId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MajorId")
                        .HasColumnType("int");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("NeededForBackgroundCheck")
                        .HasColumnType("bit");

                    b.Property<Guid?>("NoAddictionApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NoAddictionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NoAddictionDone")
                        .HasColumnType("bit");

                    b.Property<Guid?>("NoBadBackgroundApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NoBadBackgroundDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NoBadBackgroundDone")
                        .HasColumnType("bit");

                    b.Property<int>("OccupationalMedicineApproveStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("OccupationalMedicineApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OccupationalMedicineDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OccupationalMedicineDone")
                        .HasColumnType("bit");

                    b.Property<string>("OccupationalMedicineRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonnelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessStatus")
                        .HasColumnType("int");

                    b.Property<string>("PromissoryNoteAmount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JobApplicantId");

                    b.HasIndex("JobPositionId");

                    b.HasIndex("MajorId");

                    b.HasIndex("NationalCode")
                        .IsUnique();

                    b.ToTable("JobApplicants", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicantApproveHistory", b =>
                {
                    b.Property<int>("JobApplicantApproveHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobApplicantApproveHistoryId"));

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproveStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("ApprovedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("JobApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobApplicantApproveHistoryId");

                    b.HasIndex("JobApplicantId");

                    b.ToTable("JobApplicantApproveHistoris", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicantFile", b =>
                {
                    b.Property<int>("JobApplicantFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobApplicantFileId"));

                    b.Property<DateTime?>("ApproveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproveStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("ApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AttachmentTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobApplicantId")
                        .HasColumnType("int");

                    b.HasKey("JobApplicantFileId");

                    b.HasIndex("JobApplicantId");

                    b.ToTable("JobApplicantFiles", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicantsIntroductionLetter", b =>
                {
                    b.Property<int>("JobApplicantsIntroductionLetterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobApplicantsIntroductionLetterId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IntroductionLetterType")
                        .HasColumnType("int");

                    b.Property<int>("JobApplicantId")
                        .HasColumnType("int");

                    b.Property<long>("LetterNumber")
                        .HasColumnType("bigint");

                    b.HasKey("JobApplicantsIntroductionLetterId");

                    b.HasIndex("JobApplicantId");

                    b.ToTable("JobApplicantsIntroductionLetters", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobPosition", b =>
                {
                    b.Property<int>("JobPositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobPositionId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobPositionId");

                    b.ToTable("JobPositions", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.WorkerJobBackground", b =>
                {
                    b.Property<int>("WorkerJobBackgroundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkerJobBackgroundId"));

                    b.Property<bool>("AddressIMatch")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproveStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("ApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FinalStatement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstApprovePerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstApprovePersonRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearcherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ResumeIsMatch")
                        .HasColumnType("bit");

                    b.Property<string>("SecondApprovePerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondtApprovePersonRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatementOfPreviousWorkplace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdApprovePerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdApprovePersonRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkerJobBackgroundId");

                    b.HasIndex("JobApplicantId");

                    b.ToTable("WorkerJobBackgrounds", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.Questionaires.PersonQuestionnaireQuestion", b =>
                {
                    b.Property<int>("PersonQuestionnaireQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonQuestionnaireQuestionId"));

                    b.Property<int>("Answer")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AnswerDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonnelQuestionnaireId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionnaireQuestionId")
                        .HasColumnType("int");

                    b.HasKey("PersonQuestionnaireQuestionId");

                    b.HasIndex("PersonnelQuestionnaireId");

                    b.HasIndex("QuestionnaireQuestionId");

                    b.ToTable("PersonQuestionnaireQuestions", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.Questionaires.PersonnelQuestionnaire", b =>
                {
                    b.Property<int>("PersonnelQuestionnaireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonnelQuestionnaireId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PersonnelQuestionnaireId");

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("PersonnelQuestionnaires", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.Questionaires.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.ToTable("Questions", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.Questionaires.Questionnaire", b =>
                {
                    b.Property<int>("QuestionnaireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionnaireId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionnaireId");

                    b.ToTable("Questionnaires", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.Questionaires.QuestionnaireQuestion", b =>
                {
                    b.Property<int>("QuestionnaireQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionnaireQuestionId"));

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("int");

                    b.HasKey("QuestionnaireQuestionId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("QuestionnaireQuestions", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.BaseInformation", b =>
                {
                    b.Property<int>("BaseInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BaseInformationId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BirthLocationId")
                        .HasColumnType("int");

                    b.Property<int?>("BloodGroup")
                        .HasColumnType("int");

                    b.Property<bool>("BusinessMissionAbility")
                        .HasColumnType("bit");

                    b.Property<bool>("CanWorkInShifts")
                        .HasColumnType("bit");

                    b.Property<int>("ChildCount")
                        .HasColumnType("int");

                    b.Property<string>("Citizenship")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriminalRecord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentJobActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CurrntSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDateMilitaryService")
                        .HasColumnType("datetime2");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTimeActivities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("HasCriminalRecord")
                        .HasColumnType("bit");

                    b.Property<bool>("HasIntentionToMigrate")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSpecialDisease")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWorkingRelativeInPackingCompanies")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWorkingRelatives")
                        .HasColumnType("bit");

                    b.Property<int?>("HomeCityId")
                        .HasColumnType("int");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentitySerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsuranceMonths")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,15)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,15)");

                    b.Property<int>("MarriageStatus")
                        .HasColumnType("int");

                    b.Property<string>("MedicalExemptionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MilitaryServiceStatus")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PartnerEducationLevel")
                        .HasColumnType("int");

                    b.Property<string>("PartnerJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadyToWorkDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecialAcademicAchievements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialDisease")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialWorkSuccesses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDateMilitaryService")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThesisTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingRelativeInPackingCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingRelatives")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BaseInformationId");

                    b.HasIndex("JobApplicantId")
                        .IsUnique();

                    b.ToTable("BaseInformation", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationId"));

                    b.Property<int>("BaseInformationId")
                        .HasColumnType("int");

                    b.Property<int?>("EducationDurationHour")
                        .HasColumnType("int");

                    b.Property<int?>("EducationYear")
                        .HasColumnType("int");

                    b.Property<bool>("HasCertificate")
                        .HasColumnType("bit");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EducationId");

                    b.HasIndex("BaseInformationId");

                    b.ToTable("Educations", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.EmergencyContact", b =>
                {
                    b.Property<int>("EmergencyContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmergencyContactId"));

                    b.Property<int>("BaseInformationId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmergencyContactId");

                    b.HasIndex("BaseInformationId");

                    b.ToTable("EmergencyContacts", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.PersonnelComputerSkill", b =>
                {
                    b.Property<int>("PersonnelComputerSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonnelComputerSkillId"));

                    b.Property<int>("BaseInformationId")
                        .HasColumnType("int");

                    b.Property<int>("ComputerSkill")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.HasKey("PersonnelComputerSkillId");

                    b.HasIndex("BaseInformationId");

                    b.ToTable("PersonnelComputerSkills", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.PersonnelLanguage", b =>
                {
                    b.Property<int>("PersonnelLanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonnelLanguageId"));

                    b.Property<int>("BaseInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.HasKey("PersonnelLanguageId");

                    b.HasIndex("BaseInformationId");

                    b.ToTable("PersonnelLanguages", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.Resume", b =>
                {
                    b.Property<int>("ResumeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResumeId"));

                    b.Property<string>("Activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BaseInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectSupervisorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectSupervisorPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndCooperationReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationalPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ResumeId");

                    b.HasIndex("BaseInformationId");

                    b.ToTable("Resumes", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.TrainingRecord", b =>
                {
                    b.Property<int>("TrainingRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainingRecordId"));

                    b.Property<double?>("Average")
                        .HasColumnType("float");

                    b.Property<int>("BaseInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CollegeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EducationCityId")
                        .HasColumnType("int");

                    b.Property<int?>("EducationGrade")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Field")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TrainingRecordId");

                    b.HasIndex("BaseInformationId");

                    b.ToTable("TrainingRecords", "HR");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.EmployeeJobBackground", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicant", "JobApplicant")
                        .WithMany("EmployeeJobBackgrounds")
                        .HasForeignKey("JobApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobApplicant");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.HSEApproveHistory", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicant", "JobApplicant")
                        .WithMany("HSEApproveHistories")
                        .HasForeignKey("JobApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobApplicant");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicant", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobPosition", "JobPosition")
                        .WithMany("JobApplicants")
                        .HasForeignKey("JobPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teram.HR.Module.Recruitment.Entities.BaseInfo.Major", null)
                        .WithMany("JobApplicants")
                        .HasForeignKey("MajorId");

                    b.Navigation("JobPosition");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicantApproveHistory", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicant", "JobApplicant")
                        .WithMany("JobApplicantsApproveHistory")
                        .HasForeignKey("JobApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobApplicant");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicantFile", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicant", "JobApplicant")
                        .WithMany("JobApplicantFiles")
                        .HasForeignKey("JobApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobApplicant");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicantsIntroductionLetter", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicant", "JobApplicant")
                        .WithMany("JobApplicantsIntroductionLetters")
                        .HasForeignKey("JobApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobApplicant");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.WorkerJobBackground", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicant", "JobApplicant")
                        .WithMany("WorkerJobBackgrounds")
                        .HasForeignKey("JobApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobApplicant");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.Questionaires.PersonQuestionnaireQuestion", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.Questionaires.PersonnelQuestionnaire", "PersonnelQuestionnaire")
                        .WithMany("PersonQuestionnaireQuestions")
                        .HasForeignKey("PersonnelQuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teram.HR.Module.Recruitment.Entities.Questionaires.QuestionnaireQuestion", "QuestionnaireQuestion")
                        .WithMany()
                        .HasForeignKey("QuestionnaireQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonnelQuestionnaire");

                    b.Navigation("QuestionnaireQuestion");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.Questionaires.PersonnelQuestionnaire", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.Questionaires.Questionnaire", "Questionnaire")
                        .WithMany("PersonnelQuestionnaires")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questionnaire");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.Questionaires.QuestionnaireQuestion", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.Questionaires.Question", "Question")
                        .WithMany("QuestionnaireQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teram.HR.Module.Recruitment.Entities.Questionaires.Questionnaire", "Questionnaire")
                        .WithMany("QuestionnaireQuestions")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Questionnaire");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.BaseInformation", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicant", "JobApplicant")
                        .WithOne("BaseInformation")
                        .HasForeignKey("Teram.HR.Module.Recruitment.Entities.WorkWthUs.BaseInformation", "JobApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobApplicant");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.Education", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.WorkWthUs.BaseInformation", "BaseInformation")
                        .WithMany("Educations")
                        .HasForeignKey("BaseInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseInformation");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.EmergencyContact", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.WorkWthUs.BaseInformation", "BaseInformation")
                        .WithMany("EmergencyContacts")
                        .HasForeignKey("BaseInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseInformation");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.PersonnelComputerSkill", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.WorkWthUs.BaseInformation", "BaseInformation")
                        .WithMany("PersonnelComputerSkills")
                        .HasForeignKey("BaseInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseInformation");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.PersonnelLanguage", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.WorkWthUs.BaseInformation", "BaseInformation")
                        .WithMany("PersonnelLanguages")
                        .HasForeignKey("BaseInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseInformation");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.Resume", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.WorkWthUs.BaseInformation", "BaseInformation")
                        .WithMany("Resumes")
                        .HasForeignKey("BaseInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseInformation");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.TrainingRecord", b =>
                {
                    b.HasOne("Teram.HR.Module.Recruitment.Entities.WorkWthUs.BaseInformation", "BaseInformation")
                        .WithMany("TrainingRecords")
                        .HasForeignKey("BaseInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseInformation");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.BaseInfo.Major", b =>
                {
                    b.Navigation("JobApplicants");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobApplicant", b =>
                {
                    b.Navigation("BaseInformation");

                    b.Navigation("EmployeeJobBackgrounds");

                    b.Navigation("HSEApproveHistories");

                    b.Navigation("JobApplicantFiles");

                    b.Navigation("JobApplicantsApproveHistory");

                    b.Navigation("JobApplicantsIntroductionLetters");

                    b.Navigation("WorkerJobBackgrounds");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.JobApplicants.JobPosition", b =>
                {
                    b.Navigation("JobApplicants");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.Questionaires.PersonnelQuestionnaire", b =>
                {
                    b.Navigation("PersonQuestionnaireQuestions");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.Questionaires.Question", b =>
                {
                    b.Navigation("QuestionnaireQuestions");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.Questionaires.Questionnaire", b =>
                {
                    b.Navigation("PersonnelQuestionnaires");

                    b.Navigation("QuestionnaireQuestions");
                });

            modelBuilder.Entity("Teram.HR.Module.Recruitment.Entities.WorkWthUs.BaseInformation", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("EmergencyContacts");

                    b.Navigation("PersonnelComputerSkills");

                    b.Navigation("PersonnelLanguages");

                    b.Navigation("Resumes");

                    b.Navigation("TrainingRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
